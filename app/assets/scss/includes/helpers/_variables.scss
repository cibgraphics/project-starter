/*
-----------------------------------------
WIDTHS
-----------------------------------------
*/

:root {
  --site-width: 1200px;
  --radius: 4px;
}


/*
-----------------------------------------
COLORS
-----------------------------------------
*/

:root {

  --primary: purple;

  // NEUTRAL
  --white:                  #fff;
  --gray-05:                #f4f4f4;
  --gray-10:                #e6e6e6;
  --gray-20:                #cccccc;
  --gray-30:                #b3b3b3;
  --gray-40:                #b3b3b3;
  --gray-50:                #808080;
  --gray-60:                #666666;
  --gray-70:                #4d4d4d;
  --gray-80:                #333333;
  --gray-90:                #1a1a1a;
  --black:                  #000;

  // System Colors

  --info-05:                #E9F9FF;
  --info-10:                #84C2D9;
  --info-20:                #3A9FC7;
  --info-50:                #177DA6;
  --info-80:                #005E82;

  --success-05:             #E4FFED;
  --success-10:             #79E09A;
  --success-20:             #40A861;
  --success-50:             #098731;
  --success-80:             #11662C;

  --warn-05:                #FFF3E1;
  --warn-10:                #F5BE71;
  --warn-20:                #E08504;
  --warn-50:                #B56F0D;
  --warn-80:                #875608;

  --error-05:               #FFEBEB;
  --error-10:               #F89094;
  --error-20:               #F05157;
  --error-50:               #D42228;
  --error-80:               #AD050B;

  --error:                  var(--error-50);
  --warn:                   var(--warn-50);
  --success:                var(--success-50);
  --info:                   var(--info-50);

  --base-color:             #;
  --content-background:     #;

  // Text
  --text-color:             var(--gray-80);
  --link-color:             var(--primary);


  // User Select (colors when a user selects objects on screen)
  --select-background:      var(--primary);
  --select-text:            var(--white);

  // Placeholder
  --placeholder-color:      var(--gray-30);
}



/*
-----------------------------------------
FONTS
-----------------------------------------
*/

// Font Family
:root {
  --font: "Brooklyn", "Helvetica Neue", Arial, sans-serif;

  --normal: 400;
  --semi: 600;
  --bold: 700;

  --base-font-size-strip: 16;
  --base-font-size: var(--base-font-size-strip) * 1px;
}

$font-size: 16px; // This is a SCSS variable for the mixin function


/*
-----------------------------------------
BREAKPOINTS
-----------------------------------------
*/

$breakpoints: (
  "desktop-wide": 1248px,
  "desktop": 1024px,
  "desktop-small": 992px,
  "tablet-wide": 850px,
  "tablet": 768px,
  "tablet-small": 720px,
  "phone-wide": 600px,
  "phone": 480px,
  "phone-small": 400px,
);

@mixin mq($width, $type: ">=") {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
  }
  // For the future
  // @media only screen and (width #{$type} $width) {
  //   @content;
  // }

  @if $type == ">=" {
    @media only screen and (min-width: $width) {
      @content;
    }
  } @else if $type == "<=" {
    @media only screen and (max-width: $width) {
      @content;
    }
  } @else if $type == ">" {
    @media only screen and (min-width: $width + 1px) {
      @content;
    }
  } @else if $type == "<" {
    @media only screen and (max-width: $width - 1px) {
      @content;
    }
  }
}

@mixin container($width, $containerName: "", $type: ">=") {
  $widthValue: null;

  // Check if the width is a key in the breakpoints map and get the corresponding value
  @if map_has_key($breakpoints, $width) {
    $widthValue: map_get($breakpoints, $width);
  } @else {
    $widthValue: $width;
  }

  // For the future
  // @container #{$containerName} (width #{$type} #{$width}) {
  //   @content;
  // }

  @if $type == ">=" {
    @container #{$containerName} (min-width: #{$widthValue}) {
      @content;
    }
  } @else if $type == "<=" {
    @container #{$containerName} (max-width: #{$widthValue}) {
      @content;
    }
  } @else if $type == ">" {
    @container #{$containerName} (min-width: #{($widthValue + 1px)}) {
      @content;
    }
  } @else if $type == "<" {
    @container #{$containerName} (max-width: #{($widthValue + 1px)}) {
      @content;
    }
  }
}